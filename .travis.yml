jobs:
  include:
    - stage: test
      language: node_js
      cache: npm
      install:
        - npm ci
      before_script:
        - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64
          > ./cc-test-reporter
        - chmod +x ./cc-test-reporter
        - "./cc-test-reporter before-build"
      script:
        - npm run lint
        - npm run unit -- --coverage
      after_script:
        - './cc-test-reporter after-build --exit-code $TRAVIS_TEST_RESULT'
    - stage: integration-tests
      language: bash
      env:
        - DOCKER_COMPOSE_VERSION=1.23.2
      before_install:
        - sudo rm /usr/local/bin/docker-compose
        - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname
          -s`-`uname -m` > docker-compose
        - chmod +x docker-compose
        - sudo mv docker-compose /usr/local/bin
      services:
        - docker
      script:
        - bash integration-tests.sh
    - stage: release
      services:
        - docker
      language: node_js
      before_install:
        - openssl aes-256-cbc -K $encrypted_7512648e3e98_key -iv $encrypted_7512648e3e98_iv
          -in ./infrastructure/travis/openshift-token.enc -out ./infrastructure/travis/openshift-token
          -d
      install:
        - npm i -D @semantic-release/commit-analyzer @semantic-release/release-notes-generator
          @semantic-release/github @semantic-release/exec JobtechSwe/semantic-release-docker
        - bash ./infrastructure/travis/install-openshift.sh
        - export PATH=$PATH:/tmp/openshift
      script:
        - docker build -f Dockerfile -t jobtechswe/myskills-api .
        - npx semantic-release
stages:
  - test
  - integration-tests
  - name: release
    if: branch = master AND type != pull_request
notifications:
  slack:
    on_failure: always
    on_pull_requests: false
    on_success: change
    rooms:
      - secure: EIhVhqeEpqRDzR68DT3wWLtnBCaX913KG7po89dXZi77yWNX9/aFdtXT3RpwY1RXdOUhoeTd5wkEvf6eZSbVz541jGCg+uZrJCKWjy3yS1bCZauQOnQ4qBTPwlue2CMZrvF9lKjrYsgisK6dAp/6cRAsdqM1N7M1OPI1BrRuG6aH/td8MAU8gm1VFSqZhvFcgQxwbs8TQxhBc7gJsi2qvlYHp4mEfVynrKOkvJ/lhEhv+0MnRhpspC3CmpStoDlPm5WdrlYfIleLHbWbmQtxwQ++GF5ic34jBaHh4zNrBB6e3VzgOzvBzrI/E8Ub8UEkA0VOE/5Q90zrQuOd5RDtOXG13J/8ZyLWqdAvs3puOlqjAuEMU+xhPMHdyLYHrBSEWbXMkPpT9qN8WBWdFoGTqRAIOIhV+FhEpp0kV2X3UukLwn0RHpi96weSVFVTi9DmF7JShvoGKECwrEI96JbsMt0KdOluOnbUiExPk7zO8v6ADLy2469ewrRI+OcDZyyxy3mgeH/lSYPgRyo0QAvwOJJBJSfvhvv/Abej3AFy9G9Fr1csITg1QJV9mpU2wIKxDYLSS8WkaEkA0sHruU3LR1SnWaIeQMFHCEVUzteIY3pz29QuUlNGqGnl3k9oZLRY1++cDaJcW6imzVm5nrccaIZq9zw1t8XFrEGQy86YHtk=
    template:
      - Repo `%{repository_slug}` *%{result}* build (<%{build_url}|#%{build_number}>)
        for commit (<%{compare_url}|%{commit}>) on branch `%{branch}`.
      - "Message: %{commit_message}"
      - "Execution time: *%{duration}*"
